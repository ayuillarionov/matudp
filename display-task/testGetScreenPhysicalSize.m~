function testGetScreenPhysicalSize(screenIdx)

if nargin < 1
    screenIdx = max(Screen('Screens'));
end

[pw, ph] = Screen('DisplaySize', screenIdx);

% For an explanation of the try-catch block, see the section "Error Handling"
% at the end of this document.
try
	
	% Opens a graphics window on the main monitor (screen 0).  If you have
	% multiple monitors connected to your computer, then you can specify
	% a different monitor by supplying a different number in the second
	% argument to OpenWindow, e.g. Screen('OpenWindow', 2).
	window = Screen('OpenWindow', screenIdx);

	% Retrieves color codes for black and white and gray.
	black = BlackIndex(window);  % Retrieves the CLUT color code for black.
	white = WhiteIndex(window);  % Retrieves the CLUT color code for white.
    darkGray = [50 50 50];
    
    
    rectWidth = pw/2;
    rectHeight = ph/2;
    left = pw/4;
    top = ph/4;
    % left, top, right, bottom
    rect = [left, top, left+rectWidth, top+rectHeight];
    
    % compute 100 mm center square
    [mmWidth, mmHeight] = Screen('DisplaySize', screenIdx);
    
    100 / mmWidth
    
	% Colors the entire window gray.
    Screen('FillRect', window, black);
    
	Screen('FillRect', window, white, darkGray)
    
	% Writes text to the window.
	currentTextRow = 0;
	Screen('DrawText', window, sprintf('full width = %.0f, full height = %.0f', rectWidth, rectHeight), 0, currentTextRow, white);
	currentTextRow = currentTextRow + 20;
	Screen('DrawText', window, 'Press any key to exit.', 0, currentTextRow, white);

	% Updates the screen to reflect our changes to the window.
	Screen('Flip', window);

	% Waits for the user to press a key.
	KbWait;

	% ---------- Window Cleanup ---------- 

	% Closes all windows.
	Screen('CloseAll');
	 
	% Restores the mouse cursor.
	ShowCursor;
catch
   
	% ---------- Error Handling ---------- 
	% If there is an error in our code, we will end up here.

	% The try-catch block ensures that Screen will restore the display and return us
	% to the MATLAB prompt even if there is an error in our code.  Without this try-catch
	% block, Screen could still have control of the display when MATLAB throws an error, in
	% which case the user will not see the MATLAB prompt.
	Screen('CloseAll');

	% We throw the error again so the user sees the error description.
	psychrethrow(psychlasterror);
    
end
