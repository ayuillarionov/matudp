function writeEnumToStringCode(enumName)
% writes an m-file enumToString_EnumName which will convert an enum value
% (int32 Simulink enum type) to a variable length uint8 buffer containing
% the string name of the enum. This file will be located in the +sysNameLib
% package.

    fnName = sprintf('enumToString_%s', enumName);
    fileName = BusSerialize.getGeneratedCodeFileName(fnName);
    temp = tempname();
    fid = fopen(temp, 'w+');
    
    w = @(varargin) BusSerialize.writeReplaceNewline(fid, varargin{:});
   
    % get enumeration members from metaclass
    mc = meta.class.fromName(enumName);
    
    members = {mc.EnumerationMemberList.Name};
    maxLength = max(cellfun(@numel, members));
   
    w('function [str, valid] = %s(enumValue)\n', fnName);
    w('%%#codegen\n');
    w('%% DO NOT EDIT: Auto-generated by \n');
    w('%%   BusSerialize.writeEnumToStringCode(''%s'')\n', enumName);
    w('\n');
    
    w('    valid = uint8(1);\n');
     
    w('    coder.varsize(''str'', [1 %d], [false true]);\n', maxLength);
    
    % for Matlab, if it's a char array then just output it directly
    w('    if ischar(enumValue), str = enumValue; valid = uint8(1); return; end\n');
    
    % open the switch statement on enumValue
    w('    switch enumValue\n');
    
    % add a case for each member
    for i = 1:numel(members)
        w('        case %s.%s\n', enumName, members{i});
        w('            str = uint8(''%s'');\n', members{i});
    end
    
    % otherwise default to default value
    defValue = char(eval([enumName '.getDefaultValue()']));
    w('        otherwise\n', enumName, members{i});
    w('            str = uint8(''%s'');\n', defValue);
    w('            valid = uint8(0);\n');
    
    % close switch
    w('    end\n');
    
    w('end');
    
    fclose(fid);
    
    % copy now if files differed
    update = BusSerialize.overwriteIfFilesDiffer(temp, fileName);
    delete(temp);
    if update
        fprintf('BusSerialize: Updating %s\n', fnName);
    end
end
